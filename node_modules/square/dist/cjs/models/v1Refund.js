"use strict";
exports.__esModule = true;
exports.v1RefundSchema = void 0;
var schema_1 = require("../schema");
var v1Money_1 = require("./v1Money");
var v1PaymentSurcharge_1 = require("./v1PaymentSurcharge");
var v1PaymentTax_1 = require("./v1PaymentTax");
exports.v1RefundSchema = (0, schema_1.object)({
    type: ['type', (0, schema_1.optional)((0, schema_1.string)())],
    reason: ['reason', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    refundedMoney: ['refunded_money', (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; }))],
    refundedProcessingFeeMoney: [
        'refunded_processing_fee_money',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; })),
    ],
    refundedTaxMoney: ['refunded_tax_money', (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; }))],
    refundedAdditiveTaxMoney: [
        'refunded_additive_tax_money',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; })),
    ],
    refundedAdditiveTax: [
        'refunded_additive_tax',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return v1PaymentTax_1.v1PaymentTaxSchema; })))),
    ],
    refundedInclusiveTaxMoney: [
        'refunded_inclusive_tax_money',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; })),
    ],
    refundedInclusiveTax: [
        'refunded_inclusive_tax',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return v1PaymentTax_1.v1PaymentTaxSchema; })))),
    ],
    refundedTipMoney: ['refunded_tip_money', (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; }))],
    refundedDiscountMoney: [
        'refunded_discount_money',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; })),
    ],
    refundedSurchargeMoney: [
        'refunded_surcharge_money',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return v1Money_1.v1MoneySchema; })),
    ],
    refundedSurcharges: [
        'refunded_surcharges',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return v1PaymentSurcharge_1.v1PaymentSurchargeSchema; })))),
    ],
    createdAt: ['created_at', (0, schema_1.optional)((0, schema_1.string)())],
    processedAt: ['processed_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    paymentId: ['payment_id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    merchantId: ['merchant_id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    isExchange: ['is_exchange', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
});
//# sourceMappingURL=v1Refund.js.map