import { array, boolean, lazy, nullable, object, optional, string, } from '../schema';
import { catalogItemModifierListInfoSchema, } from './catalogItemModifierListInfo';
import { catalogItemOptionForItemSchema, } from './catalogItemOptionForItem';
import { catalogObjectSchema } from './catalogObject';
export const catalogItemSchema = object({
    name: ['name', optional(nullable(string()))],
    description: ['description', optional(nullable(string()))],
    abbreviation: ['abbreviation', optional(nullable(string()))],
    labelColor: ['label_color', optional(nullable(string()))],
    availableOnline: ['available_online', optional(nullable(boolean()))],
    availableForPickup: ['available_for_pickup', optional(nullable(boolean()))],
    availableElectronically: [
        'available_electronically',
        optional(nullable(boolean())),
    ],
    categoryId: ['category_id', optional(nullable(string()))],
    taxIds: ['tax_ids', optional(nullable(array(string())))],
    modifierListInfo: [
        'modifier_list_info',
        optional(nullable(array(lazy(() => catalogItemModifierListInfoSchema)))),
    ],
    variations: [
        'variations',
        optional(nullable(array(lazy(() => catalogObjectSchema)))),
    ],
    productType: ['product_type', optional(string())],
    skipModifierScreen: ['skip_modifier_screen', optional(nullable(boolean()))],
    itemOptions: [
        'item_options',
        optional(nullable(array(lazy(() => catalogItemOptionForItemSchema)))),
    ],
    imageIds: ['image_ids', optional(nullable(array(string())))],
    sortName: ['sort_name', optional(nullable(string()))],
    descriptionHtml: ['description_html', optional(nullable(string()))],
    descriptionPlaintext: ['description_plaintext', optional(string())],
});
//# sourceMappingURL=catalogItem.js.map