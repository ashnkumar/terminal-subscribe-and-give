import { array, lazy, nullable, number, object, optional, string, } from '../schema';
import { v1MoneySchema } from './v1Money';
import { v1PaymentDiscountSchema, } from './v1PaymentDiscount';
import { v1PaymentItemDetailSchema, } from './v1PaymentItemDetail';
import { v1PaymentModifierSchema, } from './v1PaymentModifier';
import { v1PaymentTaxSchema } from './v1PaymentTax';
export const v1PaymentItemizationSchema = object({
    name: ['name', optional(nullable(string()))],
    quantity: ['quantity', optional(nullable(number()))],
    itemizationType: ['itemization_type', optional(string())],
    itemDetail: ['item_detail', optional(lazy(() => v1PaymentItemDetailSchema))],
    notes: ['notes', optional(nullable(string()))],
    itemVariationName: ['item_variation_name', optional(nullable(string()))],
    totalMoney: ['total_money', optional(lazy(() => v1MoneySchema))],
    singleQuantityMoney: [
        'single_quantity_money',
        optional(lazy(() => v1MoneySchema)),
    ],
    grossSalesMoney: ['gross_sales_money', optional(lazy(() => v1MoneySchema))],
    discountMoney: ['discount_money', optional(lazy(() => v1MoneySchema))],
    netSalesMoney: ['net_sales_money', optional(lazy(() => v1MoneySchema))],
    taxes: ['taxes', optional(nullable(array(lazy(() => v1PaymentTaxSchema))))],
    discounts: [
        'discounts',
        optional(nullable(array(lazy(() => v1PaymentDiscountSchema)))),
    ],
    modifiers: [
        'modifiers',
        optional(nullable(array(lazy(() => v1PaymentModifierSchema)))),
    ],
});
//# sourceMappingURL=v1PaymentItemization.js.map