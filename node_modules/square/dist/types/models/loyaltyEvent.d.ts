import { Schema } from '../schema';
import { LoyaltyEventAccumulatePoints } from './loyaltyEventAccumulatePoints';
import { LoyaltyEventAccumulatePromotionPoints } from './loyaltyEventAccumulatePromotionPoints';
import { LoyaltyEventAdjustPoints } from './loyaltyEventAdjustPoints';
import { LoyaltyEventCreateReward } from './loyaltyEventCreateReward';
import { LoyaltyEventDeleteReward } from './loyaltyEventDeleteReward';
import { LoyaltyEventExpirePoints } from './loyaltyEventExpirePoints';
import { LoyaltyEventOther } from './loyaltyEventOther';
import { LoyaltyEventRedeemReward } from './loyaltyEventRedeemReward';
/**
 * Provides information about a loyalty event.
 * For more information, see [Search for Balance-Changing Loyalty Events](https://developer.squareup.com/docs/loyalty-api/loyalty-events).
 */
export interface LoyaltyEvent {
    /** The Square-assigned ID of the loyalty event. */
    id: string;
    /** The type of the loyalty event. */
    type: string;
    /** The timestamp when the event was created, in RFC 3339 format. */
    createdAt: string;
    /** Provides metadata when the event `type` is `ACCUMULATE_POINTS`. */
    accumulatePoints?: LoyaltyEventAccumulatePoints;
    /** Provides metadata when the event `type` is `CREATE_REWARD`. */
    createReward?: LoyaltyEventCreateReward;
    /** Provides metadata when the event `type` is `REDEEM_REWARD`. */
    redeemReward?: LoyaltyEventRedeemReward;
    /** Provides metadata when the event `type` is `DELETE_REWARD`. */
    deleteReward?: LoyaltyEventDeleteReward;
    /** Provides metadata when the event `type` is `ADJUST_POINTS`. */
    adjustPoints?: LoyaltyEventAdjustPoints;
    /** The ID of the [loyalty account](entity:LoyaltyAccount) associated with the event. */
    loyaltyAccountId: string;
    /** The ID of the [location](entity:Location) where the event occurred. */
    locationId?: string;
    /** Defines whether the event was generated by the Square Point of Sale. */
    source: string;
    /** Provides metadata when the event `type` is `EXPIRE_POINTS`. */
    expirePoints?: LoyaltyEventExpirePoints;
    /** Provides metadata when the event `type` is `OTHER`. */
    otherEvent?: LoyaltyEventOther;
    /** Provides metadata when the event `type` is `ACCUMULATE_PROMOTION_POINTS`. */
    accumulatePromotionPoints?: LoyaltyEventAccumulatePromotionPoints;
}
export declare const loyaltyEventSchema: Schema<LoyaltyEvent>;
