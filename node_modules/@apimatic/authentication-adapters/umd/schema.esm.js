import{passThroughInterceptor as e}from"@apimatic/core-interfaces";import{mergeHeaders as r,setHeader as o,AUTHORIZATION_HEADER as s}from"@apimatic/http-headers";const a=({basicAuthUserName:r,basicAuthPassword:o})=>s=>s?(e,s,a)=>(e.auth={username:r,password:o},a(e,s)):e,n=o=>s=>s?(e,s,a)=>{var n;return e.headers=null!==(n=e.headers)&&void 0!==n?n:{},r(e.headers,o),a(e,s)}:e,t=r=>o=>o?(e,o,s)=>(e.url+=(-1===e.url.indexOf("?")?"?":"&")+function(e){const r=[];for(const o of Object.keys(e))r.push(`${encodeURIComponent(o)}=${encodeURIComponent(e[o])}`);return r.join("&")}(r),s(e,o)):e;const c=({accessToken:r})=>a=>a?(e,a,n)=>{var t;return e.headers=null!==(t=e.headers)&&void 0!==t?t:{},o(e.headers,s,`Bearer ${r}`),n(e,a)}:e,d=()=>e;export{c as accessTokenAuthenticationProvider,a as basicAuthenticationProvider,n as customHeaderAuthenticationProvider,t as customQueryAuthenticationProvider,d as noneAuthenticationProvider};
